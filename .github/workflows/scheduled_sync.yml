# Follow Changes of Forked/Upstream Repository.
#
# This workflow rebase-marge changes from upstream's master to origin's master. 
# - Ref:
#   - https://stackoverflow.com/a/61574295/12102603 by N1ngu @ StackOverflow (EN)
#   - https://qiita.com/KEINOS/items/3bcaa6cea853f6b63475 by KEINOS @ Qiita (JA)

name: Notify upstream update

# Triggers the action as scheduled
on:
  # Runs on every 6 hours starting at 2:00（毎 6n+2 時 00 分に実行）
  schedule:
    # cron の設定: https://crontab.guru/examples.html
    # GitHub にはユーザーごとに実行可能な時間の制限があります。合計時間が制限を
    # 超えないように必要最低限のインターバルで実行するようにします。
    # Ref:
    #   - https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule
    #   - https://crontab.guru/examples.html
    # Cron format:
    #         ┌───────────── minute (0 - 59)
    #         │ ┌───────────── hour (0 - 23)
    #         │ │ ┌───────────── day of the month (1 - 31)
    #         │ │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #         │ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #         │ │ │ │ │
    #         │ │ │ │ │
    #         │ │ │ │ │
    #         * * * * *
    - cron:  '0 2/6 * * *'

jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Merge upstream
        id: merge_upstream
        # 以下の設定を変更してください。REPO_FORK が fork 元です。
        # コミット／マージを行うユーザー情報とフォーク元の git リポジトリの URL（要変更）
        env:
          NAME: yustier
          EMAIL: github+fork-awesome-testflight-link@i6c.at
          REPO_FORK: https://github.com/pluwen/awesome-testflight-link.git
        # 追従処理
        run: |
          : # コミット／マージの実行ユーザー情報
          : # NAME、EMAIL は下記 env 項目で設定。
          : # なお、GitHub のパスワード／トークンは checkout アクションで設定済み。
          git config --global user.name ${NAME}
          git config --global user.email ${EMAIL}

          : # git rebase をデフォルトに設定
          : # デフォルトで git rebase の --rebase-merges を付加
          git config --global pull.rebase merges

          : # "git checkout master" は不要です。デフォルトで設定されます。
          : # しかし下記の設定は重要です。過去のコミットが取得されないと、コミット歴に不統合が
          : # 発生した旨のエラーが出ます。
          : # unshallow オプションで更新情報のみを pull してくる。これを設定しないと、
          : # アップストリーム（Fork 元）から pull するときにも、すべてのブランチデータを
          : # 持ってきてしまう。
          git pull --unshallow

          : # フォーク元のリポジトリをリモート先として "upstream" に命名
          : # REPO_FORK は env で設定。
          git remote add upstream ${REPO_FORK}

          : # upstream のブランチをローカルに取得
          git fetch upstream

          : # marster ブランチの変更をマージし、clone 元の master に push
          : # ブランチ名を main などに変更していたり、別のブランチにしている場合は注意
          git checkout main
          git merge --no-edit upstream/main
          git push origin main

      # README.md の "AppRaven" を含む行に変更があった場合，Discordにメッセージを送る
      - name: Check update
        id: check_update
        run: |
          : # changed_lines=$(git diff --unified=0 HEAD^ HEAD README.md | grep '^\+.*(AppRaven|Norton|Pythonista)' || true)
          changed_lines=$(git diff --unified=0 HEAD^ HEAD README.md || true)
          echo "::set-output name=changed::${changed_lines}"

      - name: Send Message to Discord
        if:
          steps.check_update.outputs.changed != ''
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          MESSAGE: ${{ steps.check_update.outputs.changed }}
        run: |
          MESSAGE += "\n\nhttps://github.com/yustier/awesome-testflight-link/"
          curl -H "Content-Type: application/json" -d '{"username": "Awesome Testflight Apps Update", "content": "'"${MESSAGE}"'"}' "${DISCORD_WEBHOOK_URL}"
